/* ************************** */
/* HEADER */
/* ************************** */

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fdf2e9;
  /* to make the header stick at the top even when you scroll down */
  height: 9.6rem;
  padding: 0 4.8rem;
}

.logo {
  height: 2.2rem;
}

/* ************************** */
/* NAVIGATION */
/* ************************** */

.main-nav-list {
  /* to get rid of the bullet pts */
  list-style: none;
  /* to display the list items side-by-side */
  display: flex;
  align-items: center;
  /* to put some space bet. the list items */
  gap: 3.2rem;
}

.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  /* remove the underline on the links */
  text-decoration: none;
  color: #333;
  font-weight: 500;
  font-size: 1.8rem;
  /* must be placed on the orig state */
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

/* to make sure that .main-nav-link is always applied add the class & don't add any space at all*/
.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
  color: #fff;
  background-color: #e67e22;
  /* the link is placed a bit lower than the rest ===> align-items: center in .main-nav-list */
  /* no need to add transition anymore since this is being applied already via 
  .main-nav-link */
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #cf711f;
}

/* ************************** */
/* HERO SECTION */
/* ************************** */
.section-hero {
  background-color: #fdf2e9;
  /* always use padding when using a background-color; then add same spacing on 
  .hero as well (gap) */
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  max-width: 130rem;
  margin: 0 auto;
  padding: 0 3.2rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  /* background-color: blueviolet; */
  gap: 9.6rem;
  align-items: center;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.5;
  margin-bottom: 4.8rem;
}

.hero-img {
  width: 100%;
}

.delivered-meals {
  /* we can use flexbox instead of grid since we don't really care about the size of the column */
  display: flex;
  align-items: center;
  gap: 1.6rem;
  /* instead of adding margin-bottom on the 2 buttons, add a margin-top on this class instead */
  margin-top: 8rem;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  height: 4.8rem;
  /* we don't usually have to set a width since it automatically gets adjusted but since there is a bug in the safari browser when the images are flex items, so, set the width to the same value to make the images squared  */
  width: 4.8rem;
  /* to make the images round, set to 50% if the img is squared */
  border-radius: 50%;
  /* will move the images 16px to the left but space between the last img & p is now gone; to resolve this, set the margin of the last img to '0' */
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #cf711f;
  font-weight: 700;
}

/* ************************** */
/* FEATURED IN SECTION */
/* ************************** */
.section-featured {
  padding: 4.8rem 0 3.2rem 0;
}

.heading-featured-in {
  font-size: 1.4rem;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  font-weight: 500;
  text-align: center;
  margin-bottom: 2.4rem;
  color: #999;
}

.logos {
  /* img are inline-block elements; using flexbox on images will make it easier to put spaces between the images */
  display: flex;
  justify-content: space-between;
}

.logos img {
  /* we use the height instead of the width to style the img to make them look natural */
  height: 3.2rem;
  /* will turn the img to gray but in varying degrees*/
  /* filter: grayscale(100%); */
  /* will turn the img completely black */
  filter: brightness(0);
  /* visibility of the image;this fades out the img; this is also a hack to turn the black img to gray */
  opacity: 50%;
}

/* ************************** */
/* HOW-IT-WORKS SECTION */
/* ************************** */

.section-how {
  padding: 9.6rem 0;
  /* background-color: orangered; */
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
  margin-bottom: 1.2rem;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  position: relative;

  /* use flexbox to center the image */
  display: flex;
  align-items: center;
  justify-content: center;
}

.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;
  /* set to 50% to make the square rounded; a circle now appears on top of the image; use z-index to make image appear in front of the circle instead */
  border-radius: 50%;
  /* center an element using absolute positioning (the square w/ background-color #fdf2e9; flexbox is not used bec we want the square to occupy the exact same space as the image */
  position: absolute;
  /* then make the parent element's position relative (in .step-img-box) */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* the square is now centered but covers the image; use border-radius to make it rounded */
}

.step-img-box::before {
  width: 60%;
  /* height: 60%; ==> if this is not working, alt way to give the same height of 60% is to use padding-bottom; it works bec it is defined on the width of the element */
  padding-bottom: 60%;
  /* this is 60% of the parent element's width; this will create an element w/ an intrinsic height of zero but then w/ a padding of 60% w/c will then make it appear like a square */
  background-color: #fdf2e9;
  z-index: -2;
  /* the image now appears in front of the circle */
}

/* this will create another circle */
.step-img-box::after {
  width: 45%;
  padding-bottom: 45%;
  background-color: #fae5d3;
  z-index: -1;
}

.step-img {
  width: 35%;
  /* z-index: 10;  ===> this also makes the image appear in front of the circle */
}

/* background-color extends fr the left to the right side all while keeping this in a nice container that is kept centered */
/* .section-how div div {
  padding: 100px;
  font-size: 50px;
  background-color: #333;
} */

/*  <div>Test 1</div> is no longer the 1st child; now it is <div class="container grid grid--2-cols"> */
/* .section-how div:nth-child(1) {
  background-color: aqua;
}
.section-how div:nth-child(2) {
  background-color: blue;
}
.section-how div:nth-child(3) {
  background-color: violet;
}
.section-how div:nth-child(4) {
  background-color: yellow;
} */

/* TINT & SHADE GENERATOR ==> https://maketintsandshades.com/ */

/* ************************** */
/* MEALS SECTION */
/* ************************** */

.section-meals {
  padding: 9.6rem 0;
}

.meal {
  box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);
  border-radius: 11px;
  /* to round the corners of upper left & rt corners of the img */
  overflow: hidden;
  transition: all 0.4s;
}

.meal:hover {
  /* transform: translate(2rem, 2rem); */
  transform: translateY(-1.2rem);
  /* in order to do the animation, use the transition property on the orig state: .meal  */
  box-shadow: 0 3.2rem 6.4rem rgba(0, 0, 0, 0.06);
}

/* this class must be created so that the padding won't apply on the img, only the rest of the content */
.meal-content {
  padding: 3.2rem 4.8rem 4.8rem 4.8rem;
}

.meal-tags {
  margin-bottom: 1.2rem;

  display: flex;
  gap: 0.4rem;
}

.tag {
  /* in order to apply paddings into it */
  display: inline-block;
  padding: 0.4rem 0.8rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  color: #333;
  /* any large value will do */
  border-radius: 100px;
  font-weight: 600;
}

.tag--vegetarian {
  background-color: #51cf66;
}

.tag--vegan {
  background-color: #94d82d;
}
.tag--paleo {
  background-color: #ffd43b;
}

.meal-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 600;
  margin-bottom: 3.2rem;
}

.meal-attributes {
  list-style: none;
  /* use flexbox to create space between the li items */
  display: flex;
  flex-direction: column;
  /* gap acts like 'margin-bottom', no longer like margin-rt */
  gap: 2rem;
}

.meal-attribute {
  font-size: 1.8rem;
  /* to align the icons & the txt w/in the span */
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.meal-icon {
  /* ht & width must be of the same size bec icons are drawn in a rectangular box */
  height: 2.4rem;
  width: 2.4rem;
  /* icons are treated like txt so using ,color' will work on the icons instead of stroke or fill */
  color: #e67e22;
}

.meal-img {
  width: 100%;
}

.all-recipes {
  text-align: center;
  font-size: 1.8rem;
}

.list {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}

.list-item {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.list-icon {
  width: 3rem;
  height: 3rem;
  color: #e67e22;
}

/* instead of heroicons, use https://ionic.io/ionicons */
/* Usage
   Basic Usage
   copy & paste script near the </body> tag under 'Installation' section; then built-in icon from the Ionicons package can be used by populating the 'name' attribute on the 'ion-icon' component (go to 'Icons', select desired icon & copy code under 'Web Component Code' )
   *ex===>
   <ion-icon name="heart"></ion-icon>
   
*/ ;
